package {{PackageName}}

import (
    "go-devops-admin/app"
    {{PackageName}} "go-devops-admin/app/{{PackageName}}/models"
    {{PackageName}}Policy "go-devops-admin/app/{{PackageName}}/policies"
    {{PackageName}}Request "go-devops-admin/app/{{PackageName}}/requests"
    "go-devops-admin/pkg/response"

    "github.com/gin-gonic/gin"
    "github.com/spf13/cast"
)

type {{StructNamePlural}}Controller struct {
    app.BaseAPIController
}

// 列表查询
func (ctrl *{{StructNamePlural}}Controller) List(c *gin.Context) {
    request := app.PaginationRequest{}
	if ok := app.Validate(c, &request, app.Pagination); !ok {
		return
	}

	data, paper := {{PackageName}}.Paginate(c, cast.ToInt(request.PageSize))
	response.JSON(c, gin.H{
		"data":  data,
		"paper": paper,
	})

}

// 单挑查询
func (ctrl *{{StructNamePlural}}Controller) Show(c *gin.Context) {
    {{VariableName}}Model := {{PackageName}}.Get(c.Param("id"))
    if {{VariableName}}Model.ID == 0 {
        response.Abort404(c)
        return
    }
    response.Data(c, {{VariableName}}Model)
}

// 新增接口
func (ctrl *{{StructNamePlural}}Controller) Create(c *gin.Context) {
    request := {{PackageName}}Request.{{StructName}}Request{}
    if ok := app.Validate(c, &request, {{PackageName}}Request.{{StructName}}Save); !ok {
		return
	}

    {{VariableName}}Model := {{PackageName}}.{{StructName}}{
        // 填充各个字段的内容
        // FieldName: request.FieldName,
    }
    {{VariableName}}Model.Create()
    if {{VariableName}}Model.ID > 0 {
        response.Data(c, {{VariableName}}Model)
    } else {
        response.Abort500(c, "创建失败, 稍后再试")
    }
}

// 修改接口
func (ctrl *{{StructNamePlural}}Controller) Update(c *gin.Context) {
    {{VariableName}}Model := {{PackageName}}.Get(c.Param("id"))
    if {{VariableName}}Model.ID == 0 {
        response.Abort404(c)
        return
    }

    // 设置权限认证 policy
    
    request := {{PackageName}}Request.{{StructName}}Request{}
    if bindOk := app.Validate(c, &request, {{PackageName}}Request.{{StructName}}Save); !bindOk {
		return
	}

    // 需要求改的字段内容
    // {{VariableName}}Model.FieldName = request.FieldName

    rowsAffected := {{VariableName}}Model.Save()

    if rowsAffected > 0 {
        response.Data(c, {{VariableName}}Model)
    } else {
        response.Abort500(c, "更新失败, 稍后再试")
    }
}

// 删除接口
func (ctrl *{{StructNamePlural}}Controller) Delete(c *gin.Context) {
    {{VariableName}}Model := {{PackageName}}.Get(c.Param("id"))
    if {{VariableName}}Model.ID == 0 {
        response.Abort404(c)
        return
    }

    // 设置权限认证 policy

    rowsAffected := {{VariableName}}Model.Delete()

    if rowsAffected > 0 {
        response.SUCCESS(c)
        return
    }
    
    response.Abort500(c, "删除失败, 稍后再试")

}